name: production-heartbeat
on:
  schedule:
    # Cron syntax is "minute[0-59] hour[0-23] date[1-31] month[1-12] day[0-6]". '*' is 'any value', and multiple values
    # can be specified with comma-separated lists. All times are UTC.
    # So this expression means "run at 45 minutes past 1, 5, and 9 AM/PM UTC". The hours were chosen so employees on
    # US Central Time will start their day with results that are <2 hrs old.
    - cron: '45 1,5,9,13,17,21 * * *'
jobs:
  production-heartbeat:
    strategy:
      # By default, if any job in a matrix fails, all other jobs are immediately cancelled. This makes the jobs run to completion instead.
      fail-fast: false
      matrix:
        os: [{vm: ubuntu-latest, exe: .sh}, {vm: windows-2019, exe: .cmd}]
        node: ['lts/*']
    runs-on: ${{ matrix.os.vm }}
    steps:
      # === Setup. We need to get the code, set up nodejs, and create the results directory. ===
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: mkdir smoke-test-results
      # === Make three attempts to install sfdx through npm ===
      - name: Install SFDX
        id: sfdx_install
        # If the first attempt fails, wait a minute and try again. After a second failure, wait 5 minutes then try again. Then give up.
        run: npm install -g sfdx-cli || (sleep 60 && npm install -g sfdx-cli) || (sleep 300 && npm install -g sfdx-cli)

      # === Attempt to install the scanner plugin ===
      - name: Install Scanner Plugin
        id: scanner_install
        run: sfdx plugins:install @salesforce/sfdx-scanner

      # === Log out the installed plugins, for easier debugging ===
      - name: Log installed plugins
        run: sfdx plugins

      # === Attempt to execute the smoke tests ===
      - name: Run smoke tests
        id: smoke_tests
        run: smoke-tests/smoke-test${{ matrix.os.exe }} sfdx

      # === Upload the smoke-test-results folder as an artifact ===
      - name: Upload smoke-test-results folder as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: smoke-test-results-${{ runner.os }}
          path: smoke-test-results

      # === Report any failures ===
      - name: Report failures
        if: ${{ failure() }}
        shell: bash
        env:
          # A link to this run
          RUN_LINK: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          curl --request POST \
          --data '{"payload": {
            "summary": "Production heartbeat script failed on ${{ runner.os }}",
            "source": "Github Actions",
            "severity": "critical",
            "custom_details": "SFDX install: ${{ steps.sfdx_install.outcome }}. Scanner install: ${{ steps.scanner_install.outcome }}. Smoke tests: ${{ steps.smoke_tests.outcome }}"
          },
          "links": [{
            "href": "${{ env.RUN_LINK }}",
            "text": "Link to action execution"
          }],
          "event_action": "trigger",
          "routing_key": "${{ secrets.PAGERDUTY_HEARTBEAT_KEY }}"
          }' \
          https://events.pagerduty.com/v2/enqueue
